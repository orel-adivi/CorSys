RUNNING ALL BENCHMARKS OF CorSys:

======================================================================
BENCHMARK: benchmark_1
DESCRIPTION: This is a sanity benchmark, testing integer expression synthesis with DefaultMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 0.8906571865081787 s):
x + y + z
----------------------------------------------------------------------
Ran Examples2 successfully (in 0.9576449394226074 s):
y + 1 + (1 - x)
----------------------------------------------------------------------
Ran Examples3 successfully (in 0.94712233543396 s):
-z
----------------------------------------------------------------------
Ran Examples4 successfully (in 0.9062769412994385 s):
x * z + y * z
----------------------------------------------------------------------
Ran Examples5 successfully (in 0.8648080825805664 s):
z // y

======================================================================
BENCHMARK: benchmark_2
DESCRIPTION: This benchmark tests float expression synthesis with DefaultMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 0.9684615135192871 s):
x + y + z
----------------------------------------------------------------------
Ran Examples2 successfully (in 0.9062981605529785 s):
y + 1 + (1 - x)
----------------------------------------------------------------------
Ran Examples3 successfully (in 0.8437943458557129 s):
-(z / x)
----------------------------------------------------------------------
Ran Examples4 successfully (in 0.8750450611114502 s):
x * z + y / z
----------------------------------------------------------------------
Ran Examples5 successfully (in 0.8906586170196533 s):
z ** y

======================================================================
BENCHMARK: benchmark_3
DESCRIPTION: This benchmark tests string-related expression synthesis with DefaultMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 0.9781880378723145 s):
sorted(y)[-1]
----------------------------------------------------------------------
Ran Examples2 successfully (in 0.9073305130004883 s):
len(x) + -1
----------------------------------------------------------------------
Ran Examples3 successfully (in 0.9233112335205078 s):
y[0] + x[-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 0.969125509262085 s):
x[None:None:-1] + y[None:None:-1]
----------------------------------------------------------------------
Ran Examples5 successfully (in 0.953195333480835 s):
sorted(x + y)

======================================================================
BENCHMARK: benchmark_4
DESCRIPTION: This benchmark tests list-related expression synthesis with DefaultMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 0.8917181491851807 s):
sorted(x) + [0]
----------------------------------------------------------------------
Ran Examples2 successfully (in 0.8916873931884766 s):
len(x + y)
----------------------------------------------------------------------
Ran Examples3 successfully (in 0.8770956993103027 s):
x[None:None:-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 0.87506103515625 s):
x[None:None:2]
----------------------------------------------------------------------
Ran Examples5 successfully (in 0.9389052391052246 s):
x[2:None:None] + y[-1:None:None]

======================================================================
BENCHMARK: benchmark_5
DESCRIPTION: This is a numerical error benchmark, testing float expression synthesis with NormalMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 5.398204326629639 s):
x + y + z
----------------------------------------------------------------------
Ran Examples2 successfully (in 5.780953407287598 s):
y + 1.0 + (1.0 - x)
----------------------------------------------------------------------
Ran Examples3 successfully (in 6.092777490615845 s):
-(z / x)
----------------------------------------------------------------------
Ran Examples4 successfully (in 5.716940641403198 s):
x * z + y / z
----------------------------------------------------------------------
Ran Examples5 successfully (in 7.225690126419067 s):
z ** y

======================================================================
BENCHMARK: benchmark_6
DESCRIPTION: This is a calculation error benchmark, testing integer expression synthesis with CalculationMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 0.9492378234863281 s):
x + y + z
----------------------------------------------------------------------
Ran Examples2 successfully (in 0.9531607627868652 s):
y + 1 + (1 - x)
----------------------------------------------------------------------
Ran Examples3 successfully (in 0.9375629425048828 s):
-z
----------------------------------------------------------------------
Ran Examples4 successfully (in 0.9687809944152832 s):
x * z + y * z
----------------------------------------------------------------------
Ran Examples5 successfully (in 0.9688243865966797 s):
z // y

======================================================================
BENCHMARK: benchmark_7
DESCRIPTION: This is a typo benchmark, testing string expression synthesis with LevenshteinMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 73.66279244422913 s):
sorted(y)[-1]
----------------------------------------------------------------------
Ran Examples2 successfully (in 75.67328357696533 s):
x + y
----------------------------------------------------------------------
Ran Examples3 successfully (in 72.35257744789124 s):
y[0] + x[-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 74.87199878692627 s):
x[None:None:-1] + y[None:None:-1]
----------------------------------------------------------------------
Ran Examples5 successfully (in 77.2252550125122 s):
x[None:None:2] + y[None:None:-1]

======================================================================
BENCHMARK: benchmark_8
DESCRIPTION: This is a typo benchmark, testing string expression synthesis with KeyboardMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 76.37368702888489 s):
sorted(y)[-1]
----------------------------------------------------------------------
Ran Examples2 successfully (in 72.98067331314087 s):
x + y
----------------------------------------------------------------------
Ran Examples3 successfully (in 73.68146085739136 s):
y[0] + x[-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 75.60789799690247 s):
x[None:None:-1] + y[None:None:-1]
----------------------------------------------------------------------
Ran Examples5 successfully (in 71.72742819786072 s):
x[None:None:2] + y[None:None:-1]

======================================================================
BENCHMARK: benchmark_9
DESCRIPTION: This is a typo benchmark, testing string expression synthesis with HomophoneMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 73.39919304847717 s):
x[2:-1:None]
----------------------------------------------------------------------
Ran Examples2 successfully (in 73.0282530784607 s):
x + y
----------------------------------------------------------------------
Ran Examples3 successfully (in 72.20240497589111 s):
y[0] + x
----------------------------------------------------------------------
Ran Examples4 successfully (in 69.92940974235535 s):
x[None:None:-1] + y[None:None:-1]
----------------------------------------------------------------------
Ran Examples5 successfully (in 71.92503571510315 s):
x[None:None:2] + y[None:None:-1]

======================================================================
BENCHMARK: benchmark_10
DESCRIPTION: This is a list-element typo benchmark, testing list expression synthesis with HammingMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 147.86937594413757 s):
sorted(x) + [0]
----------------------------------------------------------------------
Ran Examples2 successfully (in 57.41777443885803 s):
y + x
----------------------------------------------------------------------
Ran Examples3 successfully (in 213.07581758499146 s):
x[None:None:-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 237.93644833564758 s):
x[None:None:2]
----------------------------------------------------------------------
Ran Examples5 successfully (in 248.70042061805725 s):
x[1:None:None] + y[-1:None:None]

======================================================================
50 tests out of 50 tests were successful.
ALL TESTS RAN SUCCESSFULLY.
