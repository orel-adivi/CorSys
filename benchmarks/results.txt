RUNNING ALL BENCHMARKS OF CorSys:

======================================================================
BENCHMARK: benchmark_1
DESCRIPTION: This is a sanity benchmark, testing integer expression synthesis with DefaultMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 0.8751308917999268 s):
x + y + z
----------------------------------------------------------------------
Ran Examples2 successfully (in 0.9063591957092285 s):
y + 1 + (1 - x)
----------------------------------------------------------------------
Ran Examples3 successfully (in 0.9064006805419922 s):
-z
----------------------------------------------------------------------
Ran Examples4 successfully (in 0.8886449337005615 s):
x * z + y * z
----------------------------------------------------------------------
Ran Examples5 successfully (in 0.8751161098480225 s):
z // y

======================================================================
BENCHMARK: benchmark_2
DESCRIPTION: This benchmark tests float expression synthesis with DefaultMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 0.8594937324523926 s):
x + y + z
----------------------------------------------------------------------
Ran Examples2 successfully (in 0.8907403945922852 s):
y + 1 + (1 - x)
----------------------------------------------------------------------
Ran Examples3 successfully (in 0.8905062675476074 s):
-(z / x)
----------------------------------------------------------------------
Ran Examples4 successfully (in 0.9220080375671387 s):
x * z + y / z
----------------------------------------------------------------------
Ran Examples5 successfully (in 0.8907530307769775 s):
z ** y

======================================================================
BENCHMARK: benchmark_3
DESCRIPTION: This benchmark tests string-related expression synthesis with DefaultMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 0.9220130443572998 s):
sorted(y)[-1]
----------------------------------------------------------------------
Ran Examples2 successfully (in 0.9063527584075928 s):
len(x) + -1
----------------------------------------------------------------------
Ran Examples3 successfully (in 0.922029972076416 s):
y[0] + x[-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 0.9532394409179688 s):
x[None:None:-1] + y[None:None:-1]
----------------------------------------------------------------------
Ran Examples5 successfully (in 0.9376506805419922 s):
sorted(x + y)

======================================================================
BENCHMARK: benchmark_4
DESCRIPTION: This benchmark tests list-related expression synthesis with DefaultMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 0.9478731155395508 s):
sorted(x) + [0]
----------------------------------------------------------------------
Ran Examples2 successfully (in 0.9845705032348633 s):
len(x + y)
----------------------------------------------------------------------
Ran Examples3 successfully (in 0.9580085277557373 s):
x[None:None:-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 0.9392526149749756 s):
x[None:None:2]
----------------------------------------------------------------------
Ran Examples5 successfully (in 1.0060160160064697 s):
x[2:None:None] + y[-1:None:None]

======================================================================
BENCHMARK: benchmark_5
DESCRIPTION: This is a numerical error benchmark, testing float expression synthesis with NormalMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 4.971337795257568 s):
x + y + z
----------------------------------------------------------------------
Ran Examples2 successfully (in 5.835492134094238 s):
y + 1.0 + (1.0 - x)
----------------------------------------------------------------------
Ran Examples3 successfully (in 6.316239833831787 s):
-(z / x)
----------------------------------------------------------------------
Ran Examples4 successfully (in 5.3727335929870605 s):
x * z + y / z
----------------------------------------------------------------------
Ran Examples5 successfully (in 7.172896146774292 s):
z ** y

======================================================================
BENCHMARK: benchmark_6
DESCRIPTION: This is a calculation error benchmark, testing integer expression synthesis with CalculationMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 0.9376316070556641 s):
x + y + z
----------------------------------------------------------------------
Ran Examples2 successfully (in 0.9532625675201416 s):
y + 1 + (1 - x)
----------------------------------------------------------------------
Ran Examples3 successfully (in 0.937633752822876 s):
-z
----------------------------------------------------------------------
Ran Examples4 successfully (in 0.9532485008239746 s):
x * z + y * z
----------------------------------------------------------------------
Ran Examples5 successfully (in 0.937647819519043 s):
z // y

======================================================================
BENCHMARK: benchmark_7
DESCRIPTION: This is a typo benchmark, testing string expression synthesis with LevenshteinMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 72.19076776504517 s):
sorted(y)[-1]
----------------------------------------------------------------------
Ran Examples2 successfully (in 72.39976811408997 s):
x + y
----------------------------------------------------------------------
Ran Examples3 successfully (in 71.19791173934937 s):
y[0] + x[-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 77.26753234863281 s):
x[None:None:-1] + y[None:None:-1]
----------------------------------------------------------------------
Ran Examples5 successfully (in 73.9909439086914 s):
x[None:None:2] + y[None:None:-1]

======================================================================
BENCHMARK: benchmark_8
DESCRIPTION: This is a typo benchmark, testing string expression synthesis with KeyboardMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 71.8126904964447 s):
sorted(y)[-1]
----------------------------------------------------------------------
Ran Examples2 successfully (in 73.46319890022278 s):
x + y
----------------------------------------------------------------------
Ran Examples3 successfully (in 72.06004214286804 s):
y[0] + x[-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 71.80980086326599 s):
x[None:None:-1] + y[None:None:-1]
----------------------------------------------------------------------
Ran Examples5 successfully (in 71.97589087486267 s):
x[None:None:2] + y[None:None:-1]

======================================================================
BENCHMARK: benchmark_9
DESCRIPTION: This is a typo benchmark, testing string expression synthesis with HomophoneMetric.

Running tests:
----------------------------------------------------------------------
[NOT MATCH] Ran Examples1 and got a different output (in 73.84650945663452 s):
x[2:-1:None]
[EXPECTED: sorted(y)[-1] ]
----------------------------------------------------------------------
Ran Examples2 successfully (in 74.70310878753662 s):
x + y
----------------------------------------------------------------------
[NOT MATCH] Ran Examples3 and got a different output (in 67.35975933074951 s):
y[0] + x
[EXPECTED: y[0] + x[-1] ]
----------------------------------------------------------------------
Ran Examples4 successfully (in 68.33956146240234 s):
x[None:None:-1] + y[None:None:-1]
----------------------------------------------------------------------
Ran Examples5 successfully (in 72.48114657402039 s):
x[None:None:2] + y[None:None:-1]

======================================================================
BENCHMARK: benchmark_10
DESCRIPTION: This is a list-element typo benchmark, testing list expression synthesis with HammingMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 153.71565675735474 s):
sorted(x) + [0]
----------------------------------------------------------------------
Ran Examples2 successfully (in 58.62277841567993 s):
y + x
----------------------------------------------------------------------
Ran Examples3 successfully (in 209.74250483512878 s):
x[None:None:-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 240.12642741203308 s):
x[None:None:2]
----------------------------------------------------------------------
Ran Examples5 successfully (in 235.19945168495178 s):
x[1:None:None] + y[-1:None:None]

======================================================================
48 tests out of 50 tests were successful.
FAILED IN 2 TESTS.
