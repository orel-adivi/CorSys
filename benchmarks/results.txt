RUNNING ALL BENCHMARKS OF CorSys:

======================================================================
BENCHMARK: benchmark_1
DESCRIPTION: This is a sanity benchmark, testing integer expression synthesis with DefaultMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 2.937493324279785 s):
x + y + z
----------------------------------------------------------------------
Ran Examples2 successfully (in 0.9052567481994629 s):
y + 1 + (1 - x)
----------------------------------------------------------------------
Ran Examples3 successfully (in 0.8598103523254395 s):
-z
----------------------------------------------------------------------
Ran Examples4 successfully (in 0.8906219005584717 s):
x * z + y * z
----------------------------------------------------------------------
Ran Examples5 successfully (in 0.925431489944458 s):
z // y

======================================================================
BENCHMARK: benchmark_2
DESCRIPTION: This benchmark tests float expression synthesis with DefaultMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 0.9062519073486328 s):
x + y + z
----------------------------------------------------------------------
Ran Examples2 successfully (in 0.9113004207611084 s):
y + 1 + (1 - x)
----------------------------------------------------------------------
Ran Examples3 successfully (in 0.9235506057739258 s):
-(z / x)
----------------------------------------------------------------------
Ran Examples4 successfully (in 0.9062368869781494 s):
x * z + y / z
----------------------------------------------------------------------
Ran Examples5 successfully (in 0.9764587879180908 s):
z ** y

======================================================================
BENCHMARK: benchmark_3
DESCRIPTION: This benchmark tests string-related expression synthesis with DefaultMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 0.9785370826721191 s):
sorted(y)[-1]
----------------------------------------------------------------------
Ran Examples2 successfully (in 0.8849425315856934 s):
len(x) + -1
----------------------------------------------------------------------
Ran Examples3 successfully (in 0.9346461296081543 s):
y[0] + x[-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 0.9044749736785889 s):
x[None:None:-1] + y[None:None:-1]
----------------------------------------------------------------------
Ran Examples5 successfully (in 0.882199764251709 s):
sorted(x + y)

======================================================================
BENCHMARK: benchmark_4
DESCRIPTION: This benchmark tests list-related expression synthesis with DefaultMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 0.8750019073486328 s):
sorted(x) + [0]
----------------------------------------------------------------------
Ran Examples2 successfully (in 1.056614637374878 s):
len(x + y)
----------------------------------------------------------------------
Ran Examples3 successfully (in 1.044541835784912 s):
x[None:None:-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 0.9486982822418213 s):
[val * 2 for val in x if not val % 2]
----------------------------------------------------------------------
Ran Examples5 successfully (in 0.9433376789093018 s):
x[2:None:None] + y[-1:None:None]

======================================================================
BENCHMARK: benchmark_5
DESCRIPTION: This is a numerical error benchmark, testing float expression synthesis with NormalMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 5.269817352294922 s):
x + y + z
----------------------------------------------------------------------
Ran Examples2 successfully (in 6.142568111419678 s):
y + 1.0 + (1.0 - x)
----------------------------------------------------------------------
Ran Examples3 successfully (in 6.021486759185791 s):
-(z / x)
----------------------------------------------------------------------
Ran Examples4 successfully (in 5.926656484603882 s):
x * z + y / z
----------------------------------------------------------------------
Ran Examples5 successfully (in 8.096912860870361 s):
z ** y

======================================================================
BENCHMARK: benchmark_6
DESCRIPTION: This is a calculation error benchmark, testing integer expression synthesis with CalculationMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 1.0248386859893799 s):
x + y + z
----------------------------------------------------------------------
Ran Examples2 successfully (in 1.1288247108459473 s):
y + 1 + (1 - x)
----------------------------------------------------------------------
Ran Examples3 successfully (in 1.1383965015411377 s):
-z
----------------------------------------------------------------------
Ran Examples4 successfully (in 1.016275405883789 s):
x * z + y * z
----------------------------------------------------------------------
Ran Examples5 successfully (in 0.9904873371124268 s):
z // y

======================================================================
BENCHMARK: benchmark_7
DESCRIPTION: This is a typo benchmark, testing string expression synthesis with LevenshteinMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 74.47368860244751 s):
sorted(y)[-1]
----------------------------------------------------------------------
Ran Examples2 successfully (in 70.53303503990173 s):
x + y
----------------------------------------------------------------------
Ran Examples3 successfully (in 70.28949427604675 s):
y[0] + x[-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 71.31552839279175 s):
x[None:None:-1] + y[None:None:-1]
----------------------------------------------------------------------
Ran Examples5 successfully (in 73.82918381690979 s):
x[None:None:2] + y[None:None:-1]

======================================================================
BENCHMARK: benchmark_8
DESCRIPTION: This is a typo benchmark, testing string expression synthesis with KeyboardMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 69.93228268623352 s):
sorted(y)[-1]
----------------------------------------------------------------------
Ran Examples2 successfully (in 78.89371705055237 s):
x + y
----------------------------------------------------------------------
Ran Examples3 successfully (in 71.13693809509277 s):
y[0] + x[-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 70.2039008140564 s):
x[None:None:-1] + y[None:None:-1]
----------------------------------------------------------------------
Ran Examples5 successfully (in 70.10913920402527 s):
x[None:None:2] + y[None:None:-1]

======================================================================
BENCHMARK: benchmark_9
DESCRIPTION: This is a typo benchmark, testing string expression synthesis with HomophoneMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 83.30437469482422 s):
x[2:-1:None]
----------------------------------------------------------------------
Ran Examples2 successfully (in 71.64399933815002 s):
x + y
----------------------------------------------------------------------
Ran Examples3 successfully (in 65.65851593017578 s):
y[0] + x
----------------------------------------------------------------------
Ran Examples4 successfully (in 67.10379195213318 s):
x[None:None:-1] + y[None:None:-1]
----------------------------------------------------------------------
Ran Examples5 successfully (in 71.67406463623047 s):
x[None:None:2] + y[None:None:-1]

======================================================================
BENCHMARK: benchmark_10
DESCRIPTION: This is a list-element typo benchmark, testing list expression synthesis with HammingMetric.

Running tests:
----------------------------------------------------------------------
Ran Examples1 successfully (in 158.73656940460205 s):
sorted(x) + [0]
----------------------------------------------------------------------
Ran Examples2 successfully (in 62.82745432853699 s):
y + x
----------------------------------------------------------------------
Ran Examples3 successfully (in 211.79392099380493 s):
x[None:None:-1]
----------------------------------------------------------------------
Ran Examples4 successfully (in 244.0730595588684 s):
x[None:None:2]
----------------------------------------------------------------------
Ran Examples5 successfully (in 234.3030240535736 s):
x[1:None:None] + y[-1:None:None]

======================================================================
50 tests out of 50 tests were successful.
ALL TESTS RAN SUCCESSFULLY.
